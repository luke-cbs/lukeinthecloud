---
export interface Props {
    delay: string;
}

const { delay } = Astro.props;
const pillarDelay = delay;
---

<div class="flex-1 pillar h-full">
    <div class="pillar__head z-10"></div>
    <div class="pillar__body-left pillar__body--dark"></div>
    <div class="pillar__body-right pillar__body--light"></div>
</div>

<style define:vars={{ pillarDelay }}>
    .pillar {
        --s: 100px;
        position: relative;
        font-size: 0;
        transform-origin: 25% 100%;
        transform: scale(0);
        animation: 1s pillar-grow linear var(--pillarDelay) forwards;
    }

    .pillar__head {
        position: absolute;
        transform: skew(-54deg, 18deg);
        top: 0;
        left: 0;
        background: #e96443;
        width: 140px;
        height: 51px;
        display: inline-block;
        clip-path: polygon(
            25% 0%,
            75% 0%,
            100% 50%,
            75% 100%,
            25% 100%,
            0% 50%
        );
    }

    .pillar__body-left,
    .pillar__body-right {
        position: absolute;
        background: #000000;
        height: 100%;
    }

    .pillar__body-left {
        top: 15px;
        width: 70px;
    }

    .pillar__body-right {
        top: 15px;
        left: 70px;
        width: 70px;
    }

    .pillar__body--dark {
        --dark1: rgba(233, 100, 67, 0.7);
        --dark2: rgba(202, 34, 142, 0.5);
        background: linear-gradient(to bottom, var(--dark1), var(--dark2));
    }

    .pillar__body--light {
        --dark1: rgba(233, 100, 67, 0.93);
        --dark2: rgba(202, 34, 142, 0.8);
        background: linear-gradient(to bottom, var(--dark1), var(--dark2));
    }

    @keyframes pillar-grow {
        from {
            transform: scale(0);
        }

        to {
            transform: scale(1);
        }
    }
</style>
